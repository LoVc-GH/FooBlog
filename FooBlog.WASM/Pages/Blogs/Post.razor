@page "/post"
@using System.Text.Json;
@using System.IO;
@using System;

@inject IHttpClientFactory _factory
@inject IToaster _toaster
@inject NavigationManager _navigationManager

<AuthorizeView Roles="Admin">
    <Authorized>
        <EditForm Context="form" Model="@_blog" OnValidSubmit="HandleSubmit">
            <DataAnnotationsValidator />
            <div class="form-group">
                <div class="row">
                    <div class="col-6">
                        <input class="form-control" type="text" @bind="_blog.Title" placeholder="Title">
                        <ValidationMessage For="() => _blog.Title" /><br />

                        <input class="form-control" type="text" @bind="_blog.Description" placeholder="Description">
                        <ValidationMessage For="() => _blog.Description" /><br />

                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="inputGroupFileAddon01">Image</span>
                            </div>
                            <div class="custom-file">
                                <InputFile OnChange="HandleSelection" class="custom-file-input" id="inputGroupFile01" aria-describedby="inputGroupFileAddon01" />
                                <label class="custom-file-label" for="inputGroupFile01">Choose image</label>
                            </div>
                        </div>

                        <textarea rows="25" class="form-control"
                                  @bind-value="_blog.Post"
                                  @bind-value:event="oninput">
                </textarea>
                        <ValidationMessage For="() => _blog.Post" />
                    </div>
                    <div class="col-6">
                        <MarkdownRenderer Value="@_blog.Post" />
                    </div>
                </div>
            </div>
            <button type="submit" class="btn btn-info" @bind>Post</button>
        </EditForm>
    </Authorized>
    <NotAuthorized>
        You do not belong here
    </NotAuthorized>
</AuthorizeView>

@code {
    private BlogDTO _blog = new BlogDTO();

    protected override Task OnInitializedAsync()
    {
        _blog.Post = "";
        return base.OnInitializedAsync();
    }

    async Task HandleSelection(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();
        if (file != null)
        {
            // Just load into .NET memory to show it can be done
            // Alternatively it could be saved to disk, or parsed in memory, or similar
            using (var memoryStream = new MemoryStream())
            {
                await file.Data.CopyToAsync(memoryStream);
                _blog.Image = Convert.ToBase64String(memoryStream.ToArray());
            }
        }
    }

    private void HandleSubmit()
    {
        var options = new JsonSerializerOptions
        {
            WriteIndented = true,
            PropertyNamingPolicy = null
        };

        try
        {
            _blog.CreatedOn = DateTime.Now;
            var client = _factory.CreateClient("authenticated"); 
            client.PostAsJsonAsync<BlogDTO>("blogs", _blog, options);
            _toaster.Success("Blog posted succesfully.");
            _navigationManager.NavigateTo("/");
        }
        catch
        {
            _toaster.Error("Error while posting blog!");
        }
    }
}
